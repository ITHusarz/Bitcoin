@keyframes a{0%{transform:scale(1);opacity:.5}to{transform:scale(1.4);opacity:0}}@keyframes b{0%{transform:rotate(0)}to{transform:rotate(1turn)}}@keyframes c{0%{transform:rotate(0)}to{transform:rotate(-1turn)}}*,:after,:before{box-sizing:border-box;margin:0;padding:0}html{font-size:62.5%;scroll-behavior:smooth}body{font-family:Raleway,sans-serif;font-optical-sizing:auto;font-style:normal;font-size:1.6rem;color:#fff;background-color:#232323}h1.company-name{margin-bottom:.5em;font-size:3rem;font-family:Cinzel,serif;color:#d6c78e}.wrapper{margin:0 auto;max-width:1200px;width:100%}.header{display:grid;grid-template-columns:repeat(2,1fr);grid-template-rows:repeat(2,1fr);height:100vh;position:relative;overflow:hidden}.header__text{display:grid;justify-content:center;align-content:center;grid-row:2/3;grid-column:1/3;padding:2em}.header__text p{font-weight:200}.header__img{grid-row:1/2;grid-column:1/3;position:relative;width:100%;height:100%;background-image:url(/dist/img/bitcoin-min.jpg);background-size:cover;background-position:50%;filter:sepia()}.header__shadow{position:absolute;width:100%;height:100%;background-color:rgba(0,0,0,.3)}.header__arrow{display:none}.header__bg-icon-one,.header__bg-icon-two{position:absolute;opacity:.05;z-index:-5}.header__bg-icon-one{bottom:2em;right:-3em;width:50%;animation:b 55s infinite linear}.header__bg-icon-two{display:none}.hamburger{position:absolute;top:3em;left:1em;transform:translateY(-50%);z-index:100}.hamburger-inner,.hamburger-inner:after,.hamburger-inner:before{background-color:#fff;z-index:100}.nav-mobile{position:absolute;top:0;left:0;right:0;bottom:0;display:flex;justify-content:center;align-items:center;flex-direction:column;background-color:#fff;transform:translateX(-102%);transition:transform .3s;z-index:10}.nav-mobile--active{transform:translateX(0)}.nav-desktop{display:none}.nav__link{position:relative;display:inline-block;margin:.5em;padding:.5em;font-size:2.3rem;color:#191919;text-transform:uppercase;text-decoration:none;transition:color .3s}.nav__link:hover{color:#d6c78e}.nav__link:hover:before{animation:a 1s}@media (min-width:992px){h1.company-name{font-size:6rem}.header{grid-template-rows:auto repeat(2,1fr)}.header__text{grid-row:2/4;grid-column:1/2}.header__text p{font-size:1.8rem}.header__img{grid-row:1/4;grid-column:2/3}.header__arrow{display:block;bottom:3em;left:50%;padding:2em;transform:translateX(-50%)}.header__arrow,.header__arrow:before{position:absolute;border:1px solid #fff;border-radius:50%}.header__arrow:before{top:0;left:0;content:"";width:100%;height:100%;animation:a 2s infinite}.header__arrow-icon{width:50px}.header__bg-icon-one{left:6em;bottom:8em;width:10%}.header__bg-icon-two{display:block;top:10em;left:35%;width:5%;animation:c 55s infinite linear}.header .nav{grid-column:1/2;grid-row:1/2;padding:1em}.header .nav-desktop{display:block;border-bottom:1px solid hsla(0,0%,100%,.2)}.header .nav__link{color:#fff}.header .nav__link:before{position:absolute;top:0;left:0;content:"";width:100%;height:100%;border:1px solid #d6c78e;opacity:0}.header .nav__link:hover{color:#d6c78e}.header .hamburger{display:none}}@media (min-width:1200px){.header__text p{font-size:2.2rem}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
